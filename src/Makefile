# Makefile.in generated by automake 1.14.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Makefile.am for B-em



am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/b-em
pkgincludedir = $(includedir)/b-em
pkglibdir = $(libdir)/b-em
pkglibexecdir = $(libexecdir)/b-em
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = b-em$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/etc/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am_b_em_OBJECTS = b_em-32016.$(OBJEXT) b_em-6502.$(OBJEXT) \
	b_em-6502tube.$(OBJEXT) b_em-65816.$(OBJEXT) \
	b_em-acia.$(OBJEXT) b_em-adc.$(OBJEXT) \
	b_em-compat_wrappers.$(OBJEXT) b_em-adf.$(OBJEXT) \
	b_em-arm.$(OBJEXT) b_em-cmos.$(OBJEXT) \
	b_em-compactcmos.$(OBJEXT) b_em-compact_joystick.$(OBJEXT) \
	b_em-config.$(OBJEXT) b_em-csw.$(OBJEXT) \
	b_em-ddnoise.$(OBJEXT) b_em-debugger.$(OBJEXT) \
	b_em-disc.$(OBJEXT) b_em-fdi.$(OBJEXT) b_em-fdi2raw.$(OBJEXT) \
	b_em-i8271.$(OBJEXT) b_em-ide.$(OBJEXT) \
	b_em-keyboard.$(OBJEXT) b_em-linux.$(OBJEXT) \
	b_em-linux-gui.$(OBJEXT) b_em-linux-keydefine.$(OBJEXT) \
	b_em-main.$(OBJEXT) b_em-mem.$(OBJEXT) b_em-model.$(OBJEXT) \
	b_em-mouse.$(OBJEXT) b_em-savestate.$(OBJEXT) \
	b_em-serial.$(OBJEXT) b_em-sn76489.$(OBJEXT) \
	b_em-sound.$(OBJEXT) b_em-soundopenal.$(OBJEXT) \
	b_em-ssd.$(OBJEXT) b_em-sysvia.$(OBJEXT) b_em-tape.$(OBJEXT) \
	b_em-tapenoise.$(OBJEXT) b_em-tube.$(OBJEXT) \
	b_em-uef.$(OBJEXT) b_em-uservia.$(OBJEXT) b_em-via.$(OBJEXT) \
	b_em-vidalleg.$(OBJEXT) b_em-video.$(OBJEXT) \
	b_em-wd1770.$(OBJEXT) b_em-x86.$(OBJEXT) b_em-Z80.$(OBJEXT) \
	resid.$(OBJEXT) resid-fp/convolve.$(OBJEXT) \
	resid-fp/convolve-sse.$(OBJEXT) resid-fp/envelope.$(OBJEXT) \
	resid-fp/extfilt.$(OBJEXT) resid-fp/filter.$(OBJEXT) \
	resid-fp/pot.$(OBJEXT) resid-fp/sid.$(OBJEXT) \
	resid-fp/voice.$(OBJEXT) resid-fp/wave6581_PS_.$(OBJEXT) \
	resid-fp/wave6581_PST.$(OBJEXT) \
	resid-fp/wave6581_P_T.$(OBJEXT) \
	resid-fp/wave6581__ST.$(OBJEXT) \
	resid-fp/wave8580_PS_.$(OBJEXT) \
	resid-fp/wave8580_PST.$(OBJEXT) \
	resid-fp/wave8580_P_T.$(OBJEXT) \
	resid-fp/wave8580__ST.$(OBJEXT) resid-fp/wave.$(OBJEXT)
b_em_OBJECTS = $(am_b_em_OBJECTS)
am__DEPENDENCIES_1 =
b_em_DEPENDENCIES = $(am__DEPENDENCIES_1)
SCRIPTS = $(noinst_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/etc/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(b_em_SOURCES)
DIST_SOURCES = $(b_em_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/local/non-work/b-em/etc/missing aclocal-1.14
ALLEGRO_CONFIG = /usr/bin/allegro-config
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AUTOCONF = ${SHELL} /home/local/non-work/b-em/etc/missing autoconf
AUTOHEADER = ${SHELL} /home/local/non-work/b-em/etc/missing autoheader
AUTOMAKE = ${SHELL} /home/local/non-work/b-em/etc/missing automake-1.14
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall -Werror -Wno-format-security -D_GNU_SOURCE
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"B-em\" -DPACKAGE_TARNAME=\"b-em\" -DPACKAGE_VERSION=\"0a639f6\" -DPACKAGE_STRING=\"B-em\ 0a639f6\" -DPACKAGE_BUGREPORT=\"thomas@xteddy.org\" -DPACKAGE_URL=\"\" -DPACKAGE=\"b-em\" -DVERSION=\"0a639f6\" -DHAVE_LIBZ=1 -DHAVE_LIBOPENAL=1 -DHAVE_LIBALUT=1 -DHAVE_ASPRINTF=1
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EXEEXT = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS =  -L/usr/local/lib
LIBOBJS = 
LIBS = -lalut -lopenal -lz 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/local/non-work/b-em/etc/missing makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = b-em
PACKAGE_BUGREPORT = thomas@xteddy.org
PACKAGE_NAME = B-em
PACKAGE_STRING = B-em 0a639f6
PACKAGE_TARNAME = b-em
PACKAGE_URL = 
PACKAGE_VERSION = 0a639f6
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 0a639f6
abs_builddir = /home/local/non-work/b-em/src
abs_srcdir = /home/local/non-work/b-em/src
abs_top_builddir = /home/local/non-work/b-em
abs_top_srcdir = /home/local/non-work/b-em
ac_ct_CC = gcc
ac_ct_CXX = g++
allegro_CFLAGS = -I/usr/include
allegro_LIBS = -L/usr/lib/x86_64-linux-gnu -lalleg
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/local/non-work/b-em/etc/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
noinst_SCRIPTS = ../b-em
CLEANFILES = $(noinst_SCRIPTS)
b_em_CFLAGS = $(allegro_CFLAGS)
b_em_LDADD = $(allegro_LIBS) -lz -lopenal -lalut

# workaround for Win32 Allegro, which has `allegro-config' missing
#b_em_LDADD = -lalleg -lz -lopenal -lalut
b_em_SOURCES = 32016.c 6502.c 6502tube.c 65816.c acia.c adc.c \
compat_wrappers.c \
adf.c arm.c cmos.c compactcmos.c compact_joystick.c config.c csw.c ddnoise.c \
debugger.c disc.c fdi.c fdi2raw.c i8271.c ide.c keyboard.c linux.c linux-gui.c \
linux-keydefine.c main.c mem.c model.c mouse.c savestate.c serial.c sn76489.c \
sound.c soundopenal.c ssd.c sysvia.c tape.c tapenoise.c tube.c uef.c uservia.c \
via.c vidalleg.c video.c wd1770.c x86.c Z80.c resid.cc \
resid-fp/convolve.cc resid-fp/convolve-sse.cc resid-fp/envelope.cc \
resid-fp/extfilt.cc resid-fp/filter.cc resid-fp/pot.cc resid-fp/sid.cc \
resid-fp/voice.cc resid-fp/wave6581_PS_.cc resid-fp/wave6581_PST.cc \
resid-fp/wave6581_P_T.cc resid-fp/wave6581__ST.cc resid-fp/wave8580_PS_.cc \
resid-fp/wave8580_PST.cc resid-fp/wave8580_P_T.cc resid-fp/wave8580__ST.cc \
resid-fp/wave.cc

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
resid-fp/$(am__dirstamp):
	@$(MKDIR_P) resid-fp
	@: > resid-fp/$(am__dirstamp)
resid-fp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) resid-fp/$(DEPDIR)
	@: > resid-fp/$(DEPDIR)/$(am__dirstamp)
resid-fp/convolve.$(OBJEXT): resid-fp/$(am__dirstamp) \
	resid-fp/$(DEPDIR)/$(am__dirstamp)
resid-fp/convolve-sse.$(OBJEXT): resid-fp/$(am__dirstamp) \
	resid-fp/$(DEPDIR)/$(am__dirstamp)
resid-fp/envelope.$(OBJEXT): resid-fp/$(am__dirstamp) \
	resid-fp/$(DEPDIR)/$(am__dirstamp)
resid-fp/extfilt.$(OBJEXT): resid-fp/$(am__dirstamp) \
	resid-fp/$(DEPDIR)/$(am__dirstamp)
resid-fp/filter.$(OBJEXT): resid-fp/$(am__dirstamp) \
	resid-fp/$(DEPDIR)/$(am__dirstamp)
resid-fp/pot.$(OBJEXT): resid-fp/$(am__dirstamp) \
	resid-fp/$(DEPDIR)/$(am__dirstamp)
resid-fp/sid.$(OBJEXT): resid-fp/$(am__dirstamp) \
	resid-fp/$(DEPDIR)/$(am__dirstamp)
resid-fp/voice.$(OBJEXT): resid-fp/$(am__dirstamp) \
	resid-fp/$(DEPDIR)/$(am__dirstamp)
resid-fp/wave6581_PS_.$(OBJEXT): resid-fp/$(am__dirstamp) \
	resid-fp/$(DEPDIR)/$(am__dirstamp)
resid-fp/wave6581_PST.$(OBJEXT): resid-fp/$(am__dirstamp) \
	resid-fp/$(DEPDIR)/$(am__dirstamp)
resid-fp/wave6581_P_T.$(OBJEXT): resid-fp/$(am__dirstamp) \
	resid-fp/$(DEPDIR)/$(am__dirstamp)
resid-fp/wave6581__ST.$(OBJEXT): resid-fp/$(am__dirstamp) \
	resid-fp/$(DEPDIR)/$(am__dirstamp)
resid-fp/wave8580_PS_.$(OBJEXT): resid-fp/$(am__dirstamp) \
	resid-fp/$(DEPDIR)/$(am__dirstamp)
resid-fp/wave8580_PST.$(OBJEXT): resid-fp/$(am__dirstamp) \
	resid-fp/$(DEPDIR)/$(am__dirstamp)
resid-fp/wave8580_P_T.$(OBJEXT): resid-fp/$(am__dirstamp) \
	resid-fp/$(DEPDIR)/$(am__dirstamp)
resid-fp/wave8580__ST.$(OBJEXT): resid-fp/$(am__dirstamp) \
	resid-fp/$(DEPDIR)/$(am__dirstamp)
resid-fp/wave.$(OBJEXT): resid-fp/$(am__dirstamp) \
	resid-fp/$(DEPDIR)/$(am__dirstamp)

b-em$(EXEEXT): $(b_em_OBJECTS) $(b_em_DEPENDENCIES) $(EXTRA_b_em_DEPENDENCIES) 
	@rm -f b-em$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(b_em_OBJECTS) $(b_em_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f resid-fp/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/b_em-32016.Po
include ./$(DEPDIR)/b_em-6502.Po
include ./$(DEPDIR)/b_em-6502tube.Po
include ./$(DEPDIR)/b_em-65816.Po
include ./$(DEPDIR)/b_em-Z80.Po
include ./$(DEPDIR)/b_em-acia.Po
include ./$(DEPDIR)/b_em-adc.Po
include ./$(DEPDIR)/b_em-adf.Po
include ./$(DEPDIR)/b_em-arm.Po
include ./$(DEPDIR)/b_em-cmos.Po
include ./$(DEPDIR)/b_em-compact_joystick.Po
include ./$(DEPDIR)/b_em-compactcmos.Po
include ./$(DEPDIR)/b_em-compat_wrappers.Po
include ./$(DEPDIR)/b_em-config.Po
include ./$(DEPDIR)/b_em-csw.Po
include ./$(DEPDIR)/b_em-ddnoise.Po
include ./$(DEPDIR)/b_em-debugger.Po
include ./$(DEPDIR)/b_em-disc.Po
include ./$(DEPDIR)/b_em-fdi.Po
include ./$(DEPDIR)/b_em-fdi2raw.Po
include ./$(DEPDIR)/b_em-i8271.Po
include ./$(DEPDIR)/b_em-ide.Po
include ./$(DEPDIR)/b_em-keyboard.Po
include ./$(DEPDIR)/b_em-linux-gui.Po
include ./$(DEPDIR)/b_em-linux-keydefine.Po
include ./$(DEPDIR)/b_em-linux.Po
include ./$(DEPDIR)/b_em-main.Po
include ./$(DEPDIR)/b_em-mem.Po
include ./$(DEPDIR)/b_em-model.Po
include ./$(DEPDIR)/b_em-mouse.Po
include ./$(DEPDIR)/b_em-savestate.Po
include ./$(DEPDIR)/b_em-serial.Po
include ./$(DEPDIR)/b_em-sn76489.Po
include ./$(DEPDIR)/b_em-sound.Po
include ./$(DEPDIR)/b_em-soundopenal.Po
include ./$(DEPDIR)/b_em-ssd.Po
include ./$(DEPDIR)/b_em-sysvia.Po
include ./$(DEPDIR)/b_em-tape.Po
include ./$(DEPDIR)/b_em-tapenoise.Po
include ./$(DEPDIR)/b_em-tube.Po
include ./$(DEPDIR)/b_em-uef.Po
include ./$(DEPDIR)/b_em-uservia.Po
include ./$(DEPDIR)/b_em-via.Po
include ./$(DEPDIR)/b_em-vidalleg.Po
include ./$(DEPDIR)/b_em-video.Po
include ./$(DEPDIR)/b_em-wd1770.Po
include ./$(DEPDIR)/b_em-x86.Po
include ./$(DEPDIR)/resid.Po
include resid-fp/$(DEPDIR)/convolve-sse.Po
include resid-fp/$(DEPDIR)/convolve.Po
include resid-fp/$(DEPDIR)/envelope.Po
include resid-fp/$(DEPDIR)/extfilt.Po
include resid-fp/$(DEPDIR)/filter.Po
include resid-fp/$(DEPDIR)/pot.Po
include resid-fp/$(DEPDIR)/sid.Po
include resid-fp/$(DEPDIR)/voice.Po
include resid-fp/$(DEPDIR)/wave.Po
include resid-fp/$(DEPDIR)/wave6581_PST.Po
include resid-fp/$(DEPDIR)/wave6581_PS_.Po
include resid-fp/$(DEPDIR)/wave6581_P_T.Po
include resid-fp/$(DEPDIR)/wave6581__ST.Po
include resid-fp/$(DEPDIR)/wave8580_PST.Po
include resid-fp/$(DEPDIR)/wave8580_PS_.Po
include resid-fp/$(DEPDIR)/wave8580_P_T.Po
include resid-fp/$(DEPDIR)/wave8580__ST.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

b_em-32016.o: 32016.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-32016.o -MD -MP -MF $(DEPDIR)/b_em-32016.Tpo -c -o b_em-32016.o `test -f '32016.c' || echo '$(srcdir)/'`32016.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-32016.Tpo $(DEPDIR)/b_em-32016.Po
#	$(AM_V_CC)source='32016.c' object='b_em-32016.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-32016.o `test -f '32016.c' || echo '$(srcdir)/'`32016.c

b_em-32016.obj: 32016.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-32016.obj -MD -MP -MF $(DEPDIR)/b_em-32016.Tpo -c -o b_em-32016.obj `if test -f '32016.c'; then $(CYGPATH_W) '32016.c'; else $(CYGPATH_W) '$(srcdir)/32016.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-32016.Tpo $(DEPDIR)/b_em-32016.Po
#	$(AM_V_CC)source='32016.c' object='b_em-32016.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-32016.obj `if test -f '32016.c'; then $(CYGPATH_W) '32016.c'; else $(CYGPATH_W) '$(srcdir)/32016.c'; fi`

b_em-6502.o: 6502.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-6502.o -MD -MP -MF $(DEPDIR)/b_em-6502.Tpo -c -o b_em-6502.o `test -f '6502.c' || echo '$(srcdir)/'`6502.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-6502.Tpo $(DEPDIR)/b_em-6502.Po
#	$(AM_V_CC)source='6502.c' object='b_em-6502.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-6502.o `test -f '6502.c' || echo '$(srcdir)/'`6502.c

b_em-6502.obj: 6502.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-6502.obj -MD -MP -MF $(DEPDIR)/b_em-6502.Tpo -c -o b_em-6502.obj `if test -f '6502.c'; then $(CYGPATH_W) '6502.c'; else $(CYGPATH_W) '$(srcdir)/6502.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-6502.Tpo $(DEPDIR)/b_em-6502.Po
#	$(AM_V_CC)source='6502.c' object='b_em-6502.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-6502.obj `if test -f '6502.c'; then $(CYGPATH_W) '6502.c'; else $(CYGPATH_W) '$(srcdir)/6502.c'; fi`

b_em-6502tube.o: 6502tube.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-6502tube.o -MD -MP -MF $(DEPDIR)/b_em-6502tube.Tpo -c -o b_em-6502tube.o `test -f '6502tube.c' || echo '$(srcdir)/'`6502tube.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-6502tube.Tpo $(DEPDIR)/b_em-6502tube.Po
#	$(AM_V_CC)source='6502tube.c' object='b_em-6502tube.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-6502tube.o `test -f '6502tube.c' || echo '$(srcdir)/'`6502tube.c

b_em-6502tube.obj: 6502tube.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-6502tube.obj -MD -MP -MF $(DEPDIR)/b_em-6502tube.Tpo -c -o b_em-6502tube.obj `if test -f '6502tube.c'; then $(CYGPATH_W) '6502tube.c'; else $(CYGPATH_W) '$(srcdir)/6502tube.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-6502tube.Tpo $(DEPDIR)/b_em-6502tube.Po
#	$(AM_V_CC)source='6502tube.c' object='b_em-6502tube.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-6502tube.obj `if test -f '6502tube.c'; then $(CYGPATH_W) '6502tube.c'; else $(CYGPATH_W) '$(srcdir)/6502tube.c'; fi`

b_em-65816.o: 65816.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-65816.o -MD -MP -MF $(DEPDIR)/b_em-65816.Tpo -c -o b_em-65816.o `test -f '65816.c' || echo '$(srcdir)/'`65816.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-65816.Tpo $(DEPDIR)/b_em-65816.Po
#	$(AM_V_CC)source='65816.c' object='b_em-65816.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-65816.o `test -f '65816.c' || echo '$(srcdir)/'`65816.c

b_em-65816.obj: 65816.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-65816.obj -MD -MP -MF $(DEPDIR)/b_em-65816.Tpo -c -o b_em-65816.obj `if test -f '65816.c'; then $(CYGPATH_W) '65816.c'; else $(CYGPATH_W) '$(srcdir)/65816.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-65816.Tpo $(DEPDIR)/b_em-65816.Po
#	$(AM_V_CC)source='65816.c' object='b_em-65816.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-65816.obj `if test -f '65816.c'; then $(CYGPATH_W) '65816.c'; else $(CYGPATH_W) '$(srcdir)/65816.c'; fi`

b_em-acia.o: acia.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-acia.o -MD -MP -MF $(DEPDIR)/b_em-acia.Tpo -c -o b_em-acia.o `test -f 'acia.c' || echo '$(srcdir)/'`acia.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-acia.Tpo $(DEPDIR)/b_em-acia.Po
#	$(AM_V_CC)source='acia.c' object='b_em-acia.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-acia.o `test -f 'acia.c' || echo '$(srcdir)/'`acia.c

b_em-acia.obj: acia.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-acia.obj -MD -MP -MF $(DEPDIR)/b_em-acia.Tpo -c -o b_em-acia.obj `if test -f 'acia.c'; then $(CYGPATH_W) 'acia.c'; else $(CYGPATH_W) '$(srcdir)/acia.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-acia.Tpo $(DEPDIR)/b_em-acia.Po
#	$(AM_V_CC)source='acia.c' object='b_em-acia.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-acia.obj `if test -f 'acia.c'; then $(CYGPATH_W) 'acia.c'; else $(CYGPATH_W) '$(srcdir)/acia.c'; fi`

b_em-adc.o: adc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-adc.o -MD -MP -MF $(DEPDIR)/b_em-adc.Tpo -c -o b_em-adc.o `test -f 'adc.c' || echo '$(srcdir)/'`adc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-adc.Tpo $(DEPDIR)/b_em-adc.Po
#	$(AM_V_CC)source='adc.c' object='b_em-adc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-adc.o `test -f 'adc.c' || echo '$(srcdir)/'`adc.c

b_em-adc.obj: adc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-adc.obj -MD -MP -MF $(DEPDIR)/b_em-adc.Tpo -c -o b_em-adc.obj `if test -f 'adc.c'; then $(CYGPATH_W) 'adc.c'; else $(CYGPATH_W) '$(srcdir)/adc.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-adc.Tpo $(DEPDIR)/b_em-adc.Po
#	$(AM_V_CC)source='adc.c' object='b_em-adc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-adc.obj `if test -f 'adc.c'; then $(CYGPATH_W) 'adc.c'; else $(CYGPATH_W) '$(srcdir)/adc.c'; fi`

b_em-compat_wrappers.o: compat_wrappers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-compat_wrappers.o -MD -MP -MF $(DEPDIR)/b_em-compat_wrappers.Tpo -c -o b_em-compat_wrappers.o `test -f 'compat_wrappers.c' || echo '$(srcdir)/'`compat_wrappers.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-compat_wrappers.Tpo $(DEPDIR)/b_em-compat_wrappers.Po
#	$(AM_V_CC)source='compat_wrappers.c' object='b_em-compat_wrappers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-compat_wrappers.o `test -f 'compat_wrappers.c' || echo '$(srcdir)/'`compat_wrappers.c

b_em-compat_wrappers.obj: compat_wrappers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-compat_wrappers.obj -MD -MP -MF $(DEPDIR)/b_em-compat_wrappers.Tpo -c -o b_em-compat_wrappers.obj `if test -f 'compat_wrappers.c'; then $(CYGPATH_W) 'compat_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/compat_wrappers.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-compat_wrappers.Tpo $(DEPDIR)/b_em-compat_wrappers.Po
#	$(AM_V_CC)source='compat_wrappers.c' object='b_em-compat_wrappers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-compat_wrappers.obj `if test -f 'compat_wrappers.c'; then $(CYGPATH_W) 'compat_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/compat_wrappers.c'; fi`

b_em-adf.o: adf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-adf.o -MD -MP -MF $(DEPDIR)/b_em-adf.Tpo -c -o b_em-adf.o `test -f 'adf.c' || echo '$(srcdir)/'`adf.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-adf.Tpo $(DEPDIR)/b_em-adf.Po
#	$(AM_V_CC)source='adf.c' object='b_em-adf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-adf.o `test -f 'adf.c' || echo '$(srcdir)/'`adf.c

b_em-adf.obj: adf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-adf.obj -MD -MP -MF $(DEPDIR)/b_em-adf.Tpo -c -o b_em-adf.obj `if test -f 'adf.c'; then $(CYGPATH_W) 'adf.c'; else $(CYGPATH_W) '$(srcdir)/adf.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-adf.Tpo $(DEPDIR)/b_em-adf.Po
#	$(AM_V_CC)source='adf.c' object='b_em-adf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-adf.obj `if test -f 'adf.c'; then $(CYGPATH_W) 'adf.c'; else $(CYGPATH_W) '$(srcdir)/adf.c'; fi`

b_em-arm.o: arm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-arm.o -MD -MP -MF $(DEPDIR)/b_em-arm.Tpo -c -o b_em-arm.o `test -f 'arm.c' || echo '$(srcdir)/'`arm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-arm.Tpo $(DEPDIR)/b_em-arm.Po
#	$(AM_V_CC)source='arm.c' object='b_em-arm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-arm.o `test -f 'arm.c' || echo '$(srcdir)/'`arm.c

b_em-arm.obj: arm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-arm.obj -MD -MP -MF $(DEPDIR)/b_em-arm.Tpo -c -o b_em-arm.obj `if test -f 'arm.c'; then $(CYGPATH_W) 'arm.c'; else $(CYGPATH_W) '$(srcdir)/arm.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-arm.Tpo $(DEPDIR)/b_em-arm.Po
#	$(AM_V_CC)source='arm.c' object='b_em-arm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-arm.obj `if test -f 'arm.c'; then $(CYGPATH_W) 'arm.c'; else $(CYGPATH_W) '$(srcdir)/arm.c'; fi`

b_em-cmos.o: cmos.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-cmos.o -MD -MP -MF $(DEPDIR)/b_em-cmos.Tpo -c -o b_em-cmos.o `test -f 'cmos.c' || echo '$(srcdir)/'`cmos.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-cmos.Tpo $(DEPDIR)/b_em-cmos.Po
#	$(AM_V_CC)source='cmos.c' object='b_em-cmos.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-cmos.o `test -f 'cmos.c' || echo '$(srcdir)/'`cmos.c

b_em-cmos.obj: cmos.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-cmos.obj -MD -MP -MF $(DEPDIR)/b_em-cmos.Tpo -c -o b_em-cmos.obj `if test -f 'cmos.c'; then $(CYGPATH_W) 'cmos.c'; else $(CYGPATH_W) '$(srcdir)/cmos.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-cmos.Tpo $(DEPDIR)/b_em-cmos.Po
#	$(AM_V_CC)source='cmos.c' object='b_em-cmos.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-cmos.obj `if test -f 'cmos.c'; then $(CYGPATH_W) 'cmos.c'; else $(CYGPATH_W) '$(srcdir)/cmos.c'; fi`

b_em-compactcmos.o: compactcmos.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-compactcmos.o -MD -MP -MF $(DEPDIR)/b_em-compactcmos.Tpo -c -o b_em-compactcmos.o `test -f 'compactcmos.c' || echo '$(srcdir)/'`compactcmos.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-compactcmos.Tpo $(DEPDIR)/b_em-compactcmos.Po
#	$(AM_V_CC)source='compactcmos.c' object='b_em-compactcmos.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-compactcmos.o `test -f 'compactcmos.c' || echo '$(srcdir)/'`compactcmos.c

b_em-compactcmos.obj: compactcmos.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-compactcmos.obj -MD -MP -MF $(DEPDIR)/b_em-compactcmos.Tpo -c -o b_em-compactcmos.obj `if test -f 'compactcmos.c'; then $(CYGPATH_W) 'compactcmos.c'; else $(CYGPATH_W) '$(srcdir)/compactcmos.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-compactcmos.Tpo $(DEPDIR)/b_em-compactcmos.Po
#	$(AM_V_CC)source='compactcmos.c' object='b_em-compactcmos.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-compactcmos.obj `if test -f 'compactcmos.c'; then $(CYGPATH_W) 'compactcmos.c'; else $(CYGPATH_W) '$(srcdir)/compactcmos.c'; fi`

b_em-compact_joystick.o: compact_joystick.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-compact_joystick.o -MD -MP -MF $(DEPDIR)/b_em-compact_joystick.Tpo -c -o b_em-compact_joystick.o `test -f 'compact_joystick.c' || echo '$(srcdir)/'`compact_joystick.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-compact_joystick.Tpo $(DEPDIR)/b_em-compact_joystick.Po
#	$(AM_V_CC)source='compact_joystick.c' object='b_em-compact_joystick.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-compact_joystick.o `test -f 'compact_joystick.c' || echo '$(srcdir)/'`compact_joystick.c

b_em-compact_joystick.obj: compact_joystick.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-compact_joystick.obj -MD -MP -MF $(DEPDIR)/b_em-compact_joystick.Tpo -c -o b_em-compact_joystick.obj `if test -f 'compact_joystick.c'; then $(CYGPATH_W) 'compact_joystick.c'; else $(CYGPATH_W) '$(srcdir)/compact_joystick.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-compact_joystick.Tpo $(DEPDIR)/b_em-compact_joystick.Po
#	$(AM_V_CC)source='compact_joystick.c' object='b_em-compact_joystick.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-compact_joystick.obj `if test -f 'compact_joystick.c'; then $(CYGPATH_W) 'compact_joystick.c'; else $(CYGPATH_W) '$(srcdir)/compact_joystick.c'; fi`

b_em-config.o: config.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-config.o -MD -MP -MF $(DEPDIR)/b_em-config.Tpo -c -o b_em-config.o `test -f 'config.c' || echo '$(srcdir)/'`config.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-config.Tpo $(DEPDIR)/b_em-config.Po
#	$(AM_V_CC)source='config.c' object='b_em-config.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-config.o `test -f 'config.c' || echo '$(srcdir)/'`config.c

b_em-config.obj: config.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-config.obj -MD -MP -MF $(DEPDIR)/b_em-config.Tpo -c -o b_em-config.obj `if test -f 'config.c'; then $(CYGPATH_W) 'config.c'; else $(CYGPATH_W) '$(srcdir)/config.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-config.Tpo $(DEPDIR)/b_em-config.Po
#	$(AM_V_CC)source='config.c' object='b_em-config.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-config.obj `if test -f 'config.c'; then $(CYGPATH_W) 'config.c'; else $(CYGPATH_W) '$(srcdir)/config.c'; fi`

b_em-csw.o: csw.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-csw.o -MD -MP -MF $(DEPDIR)/b_em-csw.Tpo -c -o b_em-csw.o `test -f 'csw.c' || echo '$(srcdir)/'`csw.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-csw.Tpo $(DEPDIR)/b_em-csw.Po
#	$(AM_V_CC)source='csw.c' object='b_em-csw.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-csw.o `test -f 'csw.c' || echo '$(srcdir)/'`csw.c

b_em-csw.obj: csw.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-csw.obj -MD -MP -MF $(DEPDIR)/b_em-csw.Tpo -c -o b_em-csw.obj `if test -f 'csw.c'; then $(CYGPATH_W) 'csw.c'; else $(CYGPATH_W) '$(srcdir)/csw.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-csw.Tpo $(DEPDIR)/b_em-csw.Po
#	$(AM_V_CC)source='csw.c' object='b_em-csw.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-csw.obj `if test -f 'csw.c'; then $(CYGPATH_W) 'csw.c'; else $(CYGPATH_W) '$(srcdir)/csw.c'; fi`

b_em-ddnoise.o: ddnoise.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-ddnoise.o -MD -MP -MF $(DEPDIR)/b_em-ddnoise.Tpo -c -o b_em-ddnoise.o `test -f 'ddnoise.c' || echo '$(srcdir)/'`ddnoise.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-ddnoise.Tpo $(DEPDIR)/b_em-ddnoise.Po
#	$(AM_V_CC)source='ddnoise.c' object='b_em-ddnoise.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-ddnoise.o `test -f 'ddnoise.c' || echo '$(srcdir)/'`ddnoise.c

b_em-ddnoise.obj: ddnoise.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-ddnoise.obj -MD -MP -MF $(DEPDIR)/b_em-ddnoise.Tpo -c -o b_em-ddnoise.obj `if test -f 'ddnoise.c'; then $(CYGPATH_W) 'ddnoise.c'; else $(CYGPATH_W) '$(srcdir)/ddnoise.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-ddnoise.Tpo $(DEPDIR)/b_em-ddnoise.Po
#	$(AM_V_CC)source='ddnoise.c' object='b_em-ddnoise.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-ddnoise.obj `if test -f 'ddnoise.c'; then $(CYGPATH_W) 'ddnoise.c'; else $(CYGPATH_W) '$(srcdir)/ddnoise.c'; fi`

b_em-debugger.o: debugger.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-debugger.o -MD -MP -MF $(DEPDIR)/b_em-debugger.Tpo -c -o b_em-debugger.o `test -f 'debugger.c' || echo '$(srcdir)/'`debugger.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-debugger.Tpo $(DEPDIR)/b_em-debugger.Po
#	$(AM_V_CC)source='debugger.c' object='b_em-debugger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-debugger.o `test -f 'debugger.c' || echo '$(srcdir)/'`debugger.c

b_em-debugger.obj: debugger.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-debugger.obj -MD -MP -MF $(DEPDIR)/b_em-debugger.Tpo -c -o b_em-debugger.obj `if test -f 'debugger.c'; then $(CYGPATH_W) 'debugger.c'; else $(CYGPATH_W) '$(srcdir)/debugger.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-debugger.Tpo $(DEPDIR)/b_em-debugger.Po
#	$(AM_V_CC)source='debugger.c' object='b_em-debugger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-debugger.obj `if test -f 'debugger.c'; then $(CYGPATH_W) 'debugger.c'; else $(CYGPATH_W) '$(srcdir)/debugger.c'; fi`

b_em-disc.o: disc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-disc.o -MD -MP -MF $(DEPDIR)/b_em-disc.Tpo -c -o b_em-disc.o `test -f 'disc.c' || echo '$(srcdir)/'`disc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-disc.Tpo $(DEPDIR)/b_em-disc.Po
#	$(AM_V_CC)source='disc.c' object='b_em-disc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-disc.o `test -f 'disc.c' || echo '$(srcdir)/'`disc.c

b_em-disc.obj: disc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-disc.obj -MD -MP -MF $(DEPDIR)/b_em-disc.Tpo -c -o b_em-disc.obj `if test -f 'disc.c'; then $(CYGPATH_W) 'disc.c'; else $(CYGPATH_W) '$(srcdir)/disc.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-disc.Tpo $(DEPDIR)/b_em-disc.Po
#	$(AM_V_CC)source='disc.c' object='b_em-disc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-disc.obj `if test -f 'disc.c'; then $(CYGPATH_W) 'disc.c'; else $(CYGPATH_W) '$(srcdir)/disc.c'; fi`

b_em-fdi.o: fdi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-fdi.o -MD -MP -MF $(DEPDIR)/b_em-fdi.Tpo -c -o b_em-fdi.o `test -f 'fdi.c' || echo '$(srcdir)/'`fdi.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-fdi.Tpo $(DEPDIR)/b_em-fdi.Po
#	$(AM_V_CC)source='fdi.c' object='b_em-fdi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-fdi.o `test -f 'fdi.c' || echo '$(srcdir)/'`fdi.c

b_em-fdi.obj: fdi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-fdi.obj -MD -MP -MF $(DEPDIR)/b_em-fdi.Tpo -c -o b_em-fdi.obj `if test -f 'fdi.c'; then $(CYGPATH_W) 'fdi.c'; else $(CYGPATH_W) '$(srcdir)/fdi.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-fdi.Tpo $(DEPDIR)/b_em-fdi.Po
#	$(AM_V_CC)source='fdi.c' object='b_em-fdi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-fdi.obj `if test -f 'fdi.c'; then $(CYGPATH_W) 'fdi.c'; else $(CYGPATH_W) '$(srcdir)/fdi.c'; fi`

b_em-fdi2raw.o: fdi2raw.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-fdi2raw.o -MD -MP -MF $(DEPDIR)/b_em-fdi2raw.Tpo -c -o b_em-fdi2raw.o `test -f 'fdi2raw.c' || echo '$(srcdir)/'`fdi2raw.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-fdi2raw.Tpo $(DEPDIR)/b_em-fdi2raw.Po
#	$(AM_V_CC)source='fdi2raw.c' object='b_em-fdi2raw.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-fdi2raw.o `test -f 'fdi2raw.c' || echo '$(srcdir)/'`fdi2raw.c

b_em-fdi2raw.obj: fdi2raw.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-fdi2raw.obj -MD -MP -MF $(DEPDIR)/b_em-fdi2raw.Tpo -c -o b_em-fdi2raw.obj `if test -f 'fdi2raw.c'; then $(CYGPATH_W) 'fdi2raw.c'; else $(CYGPATH_W) '$(srcdir)/fdi2raw.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-fdi2raw.Tpo $(DEPDIR)/b_em-fdi2raw.Po
#	$(AM_V_CC)source='fdi2raw.c' object='b_em-fdi2raw.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-fdi2raw.obj `if test -f 'fdi2raw.c'; then $(CYGPATH_W) 'fdi2raw.c'; else $(CYGPATH_W) '$(srcdir)/fdi2raw.c'; fi`

b_em-i8271.o: i8271.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-i8271.o -MD -MP -MF $(DEPDIR)/b_em-i8271.Tpo -c -o b_em-i8271.o `test -f 'i8271.c' || echo '$(srcdir)/'`i8271.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-i8271.Tpo $(DEPDIR)/b_em-i8271.Po
#	$(AM_V_CC)source='i8271.c' object='b_em-i8271.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-i8271.o `test -f 'i8271.c' || echo '$(srcdir)/'`i8271.c

b_em-i8271.obj: i8271.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-i8271.obj -MD -MP -MF $(DEPDIR)/b_em-i8271.Tpo -c -o b_em-i8271.obj `if test -f 'i8271.c'; then $(CYGPATH_W) 'i8271.c'; else $(CYGPATH_W) '$(srcdir)/i8271.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-i8271.Tpo $(DEPDIR)/b_em-i8271.Po
#	$(AM_V_CC)source='i8271.c' object='b_em-i8271.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-i8271.obj `if test -f 'i8271.c'; then $(CYGPATH_W) 'i8271.c'; else $(CYGPATH_W) '$(srcdir)/i8271.c'; fi`

b_em-ide.o: ide.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-ide.o -MD -MP -MF $(DEPDIR)/b_em-ide.Tpo -c -o b_em-ide.o `test -f 'ide.c' || echo '$(srcdir)/'`ide.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-ide.Tpo $(DEPDIR)/b_em-ide.Po
#	$(AM_V_CC)source='ide.c' object='b_em-ide.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-ide.o `test -f 'ide.c' || echo '$(srcdir)/'`ide.c

b_em-ide.obj: ide.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-ide.obj -MD -MP -MF $(DEPDIR)/b_em-ide.Tpo -c -o b_em-ide.obj `if test -f 'ide.c'; then $(CYGPATH_W) 'ide.c'; else $(CYGPATH_W) '$(srcdir)/ide.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-ide.Tpo $(DEPDIR)/b_em-ide.Po
#	$(AM_V_CC)source='ide.c' object='b_em-ide.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-ide.obj `if test -f 'ide.c'; then $(CYGPATH_W) 'ide.c'; else $(CYGPATH_W) '$(srcdir)/ide.c'; fi`

b_em-keyboard.o: keyboard.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-keyboard.o -MD -MP -MF $(DEPDIR)/b_em-keyboard.Tpo -c -o b_em-keyboard.o `test -f 'keyboard.c' || echo '$(srcdir)/'`keyboard.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-keyboard.Tpo $(DEPDIR)/b_em-keyboard.Po
#	$(AM_V_CC)source='keyboard.c' object='b_em-keyboard.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-keyboard.o `test -f 'keyboard.c' || echo '$(srcdir)/'`keyboard.c

b_em-keyboard.obj: keyboard.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-keyboard.obj -MD -MP -MF $(DEPDIR)/b_em-keyboard.Tpo -c -o b_em-keyboard.obj `if test -f 'keyboard.c'; then $(CYGPATH_W) 'keyboard.c'; else $(CYGPATH_W) '$(srcdir)/keyboard.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-keyboard.Tpo $(DEPDIR)/b_em-keyboard.Po
#	$(AM_V_CC)source='keyboard.c' object='b_em-keyboard.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-keyboard.obj `if test -f 'keyboard.c'; then $(CYGPATH_W) 'keyboard.c'; else $(CYGPATH_W) '$(srcdir)/keyboard.c'; fi`

b_em-linux.o: linux.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-linux.o -MD -MP -MF $(DEPDIR)/b_em-linux.Tpo -c -o b_em-linux.o `test -f 'linux.c' || echo '$(srcdir)/'`linux.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-linux.Tpo $(DEPDIR)/b_em-linux.Po
#	$(AM_V_CC)source='linux.c' object='b_em-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-linux.o `test -f 'linux.c' || echo '$(srcdir)/'`linux.c

b_em-linux.obj: linux.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-linux.obj -MD -MP -MF $(DEPDIR)/b_em-linux.Tpo -c -o b_em-linux.obj `if test -f 'linux.c'; then $(CYGPATH_W) 'linux.c'; else $(CYGPATH_W) '$(srcdir)/linux.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-linux.Tpo $(DEPDIR)/b_em-linux.Po
#	$(AM_V_CC)source='linux.c' object='b_em-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-linux.obj `if test -f 'linux.c'; then $(CYGPATH_W) 'linux.c'; else $(CYGPATH_W) '$(srcdir)/linux.c'; fi`

b_em-linux-gui.o: linux-gui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-linux-gui.o -MD -MP -MF $(DEPDIR)/b_em-linux-gui.Tpo -c -o b_em-linux-gui.o `test -f 'linux-gui.c' || echo '$(srcdir)/'`linux-gui.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-linux-gui.Tpo $(DEPDIR)/b_em-linux-gui.Po
#	$(AM_V_CC)source='linux-gui.c' object='b_em-linux-gui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-linux-gui.o `test -f 'linux-gui.c' || echo '$(srcdir)/'`linux-gui.c

b_em-linux-gui.obj: linux-gui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-linux-gui.obj -MD -MP -MF $(DEPDIR)/b_em-linux-gui.Tpo -c -o b_em-linux-gui.obj `if test -f 'linux-gui.c'; then $(CYGPATH_W) 'linux-gui.c'; else $(CYGPATH_W) '$(srcdir)/linux-gui.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-linux-gui.Tpo $(DEPDIR)/b_em-linux-gui.Po
#	$(AM_V_CC)source='linux-gui.c' object='b_em-linux-gui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-linux-gui.obj `if test -f 'linux-gui.c'; then $(CYGPATH_W) 'linux-gui.c'; else $(CYGPATH_W) '$(srcdir)/linux-gui.c'; fi`

b_em-linux-keydefine.o: linux-keydefine.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-linux-keydefine.o -MD -MP -MF $(DEPDIR)/b_em-linux-keydefine.Tpo -c -o b_em-linux-keydefine.o `test -f 'linux-keydefine.c' || echo '$(srcdir)/'`linux-keydefine.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-linux-keydefine.Tpo $(DEPDIR)/b_em-linux-keydefine.Po
#	$(AM_V_CC)source='linux-keydefine.c' object='b_em-linux-keydefine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-linux-keydefine.o `test -f 'linux-keydefine.c' || echo '$(srcdir)/'`linux-keydefine.c

b_em-linux-keydefine.obj: linux-keydefine.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-linux-keydefine.obj -MD -MP -MF $(DEPDIR)/b_em-linux-keydefine.Tpo -c -o b_em-linux-keydefine.obj `if test -f 'linux-keydefine.c'; then $(CYGPATH_W) 'linux-keydefine.c'; else $(CYGPATH_W) '$(srcdir)/linux-keydefine.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-linux-keydefine.Tpo $(DEPDIR)/b_em-linux-keydefine.Po
#	$(AM_V_CC)source='linux-keydefine.c' object='b_em-linux-keydefine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-linux-keydefine.obj `if test -f 'linux-keydefine.c'; then $(CYGPATH_W) 'linux-keydefine.c'; else $(CYGPATH_W) '$(srcdir)/linux-keydefine.c'; fi`

b_em-main.o: main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-main.o -MD -MP -MF $(DEPDIR)/b_em-main.Tpo -c -o b_em-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-main.Tpo $(DEPDIR)/b_em-main.Po
#	$(AM_V_CC)source='main.c' object='b_em-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

b_em-main.obj: main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-main.obj -MD -MP -MF $(DEPDIR)/b_em-main.Tpo -c -o b_em-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-main.Tpo $(DEPDIR)/b_em-main.Po
#	$(AM_V_CC)source='main.c' object='b_em-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

b_em-mem.o: mem.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-mem.o -MD -MP -MF $(DEPDIR)/b_em-mem.Tpo -c -o b_em-mem.o `test -f 'mem.c' || echo '$(srcdir)/'`mem.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-mem.Tpo $(DEPDIR)/b_em-mem.Po
#	$(AM_V_CC)source='mem.c' object='b_em-mem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-mem.o `test -f 'mem.c' || echo '$(srcdir)/'`mem.c

b_em-mem.obj: mem.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-mem.obj -MD -MP -MF $(DEPDIR)/b_em-mem.Tpo -c -o b_em-mem.obj `if test -f 'mem.c'; then $(CYGPATH_W) 'mem.c'; else $(CYGPATH_W) '$(srcdir)/mem.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-mem.Tpo $(DEPDIR)/b_em-mem.Po
#	$(AM_V_CC)source='mem.c' object='b_em-mem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-mem.obj `if test -f 'mem.c'; then $(CYGPATH_W) 'mem.c'; else $(CYGPATH_W) '$(srcdir)/mem.c'; fi`

b_em-model.o: model.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-model.o -MD -MP -MF $(DEPDIR)/b_em-model.Tpo -c -o b_em-model.o `test -f 'model.c' || echo '$(srcdir)/'`model.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-model.Tpo $(DEPDIR)/b_em-model.Po
#	$(AM_V_CC)source='model.c' object='b_em-model.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-model.o `test -f 'model.c' || echo '$(srcdir)/'`model.c

b_em-model.obj: model.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-model.obj -MD -MP -MF $(DEPDIR)/b_em-model.Tpo -c -o b_em-model.obj `if test -f 'model.c'; then $(CYGPATH_W) 'model.c'; else $(CYGPATH_W) '$(srcdir)/model.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-model.Tpo $(DEPDIR)/b_em-model.Po
#	$(AM_V_CC)source='model.c' object='b_em-model.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-model.obj `if test -f 'model.c'; then $(CYGPATH_W) 'model.c'; else $(CYGPATH_W) '$(srcdir)/model.c'; fi`

b_em-mouse.o: mouse.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-mouse.o -MD -MP -MF $(DEPDIR)/b_em-mouse.Tpo -c -o b_em-mouse.o `test -f 'mouse.c' || echo '$(srcdir)/'`mouse.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-mouse.Tpo $(DEPDIR)/b_em-mouse.Po
#	$(AM_V_CC)source='mouse.c' object='b_em-mouse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-mouse.o `test -f 'mouse.c' || echo '$(srcdir)/'`mouse.c

b_em-mouse.obj: mouse.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-mouse.obj -MD -MP -MF $(DEPDIR)/b_em-mouse.Tpo -c -o b_em-mouse.obj `if test -f 'mouse.c'; then $(CYGPATH_W) 'mouse.c'; else $(CYGPATH_W) '$(srcdir)/mouse.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-mouse.Tpo $(DEPDIR)/b_em-mouse.Po
#	$(AM_V_CC)source='mouse.c' object='b_em-mouse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-mouse.obj `if test -f 'mouse.c'; then $(CYGPATH_W) 'mouse.c'; else $(CYGPATH_W) '$(srcdir)/mouse.c'; fi`

b_em-savestate.o: savestate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-savestate.o -MD -MP -MF $(DEPDIR)/b_em-savestate.Tpo -c -o b_em-savestate.o `test -f 'savestate.c' || echo '$(srcdir)/'`savestate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-savestate.Tpo $(DEPDIR)/b_em-savestate.Po
#	$(AM_V_CC)source='savestate.c' object='b_em-savestate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-savestate.o `test -f 'savestate.c' || echo '$(srcdir)/'`savestate.c

b_em-savestate.obj: savestate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-savestate.obj -MD -MP -MF $(DEPDIR)/b_em-savestate.Tpo -c -o b_em-savestate.obj `if test -f 'savestate.c'; then $(CYGPATH_W) 'savestate.c'; else $(CYGPATH_W) '$(srcdir)/savestate.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-savestate.Tpo $(DEPDIR)/b_em-savestate.Po
#	$(AM_V_CC)source='savestate.c' object='b_em-savestate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-savestate.obj `if test -f 'savestate.c'; then $(CYGPATH_W) 'savestate.c'; else $(CYGPATH_W) '$(srcdir)/savestate.c'; fi`

b_em-serial.o: serial.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-serial.o -MD -MP -MF $(DEPDIR)/b_em-serial.Tpo -c -o b_em-serial.o `test -f 'serial.c' || echo '$(srcdir)/'`serial.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-serial.Tpo $(DEPDIR)/b_em-serial.Po
#	$(AM_V_CC)source='serial.c' object='b_em-serial.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-serial.o `test -f 'serial.c' || echo '$(srcdir)/'`serial.c

b_em-serial.obj: serial.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-serial.obj -MD -MP -MF $(DEPDIR)/b_em-serial.Tpo -c -o b_em-serial.obj `if test -f 'serial.c'; then $(CYGPATH_W) 'serial.c'; else $(CYGPATH_W) '$(srcdir)/serial.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-serial.Tpo $(DEPDIR)/b_em-serial.Po
#	$(AM_V_CC)source='serial.c' object='b_em-serial.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-serial.obj `if test -f 'serial.c'; then $(CYGPATH_W) 'serial.c'; else $(CYGPATH_W) '$(srcdir)/serial.c'; fi`

b_em-sn76489.o: sn76489.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-sn76489.o -MD -MP -MF $(DEPDIR)/b_em-sn76489.Tpo -c -o b_em-sn76489.o `test -f 'sn76489.c' || echo '$(srcdir)/'`sn76489.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-sn76489.Tpo $(DEPDIR)/b_em-sn76489.Po
#	$(AM_V_CC)source='sn76489.c' object='b_em-sn76489.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-sn76489.o `test -f 'sn76489.c' || echo '$(srcdir)/'`sn76489.c

b_em-sn76489.obj: sn76489.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-sn76489.obj -MD -MP -MF $(DEPDIR)/b_em-sn76489.Tpo -c -o b_em-sn76489.obj `if test -f 'sn76489.c'; then $(CYGPATH_W) 'sn76489.c'; else $(CYGPATH_W) '$(srcdir)/sn76489.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-sn76489.Tpo $(DEPDIR)/b_em-sn76489.Po
#	$(AM_V_CC)source='sn76489.c' object='b_em-sn76489.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-sn76489.obj `if test -f 'sn76489.c'; then $(CYGPATH_W) 'sn76489.c'; else $(CYGPATH_W) '$(srcdir)/sn76489.c'; fi`

b_em-sound.o: sound.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-sound.o -MD -MP -MF $(DEPDIR)/b_em-sound.Tpo -c -o b_em-sound.o `test -f 'sound.c' || echo '$(srcdir)/'`sound.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-sound.Tpo $(DEPDIR)/b_em-sound.Po
#	$(AM_V_CC)source='sound.c' object='b_em-sound.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-sound.o `test -f 'sound.c' || echo '$(srcdir)/'`sound.c

b_em-sound.obj: sound.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-sound.obj -MD -MP -MF $(DEPDIR)/b_em-sound.Tpo -c -o b_em-sound.obj `if test -f 'sound.c'; then $(CYGPATH_W) 'sound.c'; else $(CYGPATH_W) '$(srcdir)/sound.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-sound.Tpo $(DEPDIR)/b_em-sound.Po
#	$(AM_V_CC)source='sound.c' object='b_em-sound.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-sound.obj `if test -f 'sound.c'; then $(CYGPATH_W) 'sound.c'; else $(CYGPATH_W) '$(srcdir)/sound.c'; fi`

b_em-soundopenal.o: soundopenal.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-soundopenal.o -MD -MP -MF $(DEPDIR)/b_em-soundopenal.Tpo -c -o b_em-soundopenal.o `test -f 'soundopenal.c' || echo '$(srcdir)/'`soundopenal.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-soundopenal.Tpo $(DEPDIR)/b_em-soundopenal.Po
#	$(AM_V_CC)source='soundopenal.c' object='b_em-soundopenal.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-soundopenal.o `test -f 'soundopenal.c' || echo '$(srcdir)/'`soundopenal.c

b_em-soundopenal.obj: soundopenal.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-soundopenal.obj -MD -MP -MF $(DEPDIR)/b_em-soundopenal.Tpo -c -o b_em-soundopenal.obj `if test -f 'soundopenal.c'; then $(CYGPATH_W) 'soundopenal.c'; else $(CYGPATH_W) '$(srcdir)/soundopenal.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-soundopenal.Tpo $(DEPDIR)/b_em-soundopenal.Po
#	$(AM_V_CC)source='soundopenal.c' object='b_em-soundopenal.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-soundopenal.obj `if test -f 'soundopenal.c'; then $(CYGPATH_W) 'soundopenal.c'; else $(CYGPATH_W) '$(srcdir)/soundopenal.c'; fi`

b_em-ssd.o: ssd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-ssd.o -MD -MP -MF $(DEPDIR)/b_em-ssd.Tpo -c -o b_em-ssd.o `test -f 'ssd.c' || echo '$(srcdir)/'`ssd.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-ssd.Tpo $(DEPDIR)/b_em-ssd.Po
#	$(AM_V_CC)source='ssd.c' object='b_em-ssd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-ssd.o `test -f 'ssd.c' || echo '$(srcdir)/'`ssd.c

b_em-ssd.obj: ssd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-ssd.obj -MD -MP -MF $(DEPDIR)/b_em-ssd.Tpo -c -o b_em-ssd.obj `if test -f 'ssd.c'; then $(CYGPATH_W) 'ssd.c'; else $(CYGPATH_W) '$(srcdir)/ssd.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-ssd.Tpo $(DEPDIR)/b_em-ssd.Po
#	$(AM_V_CC)source='ssd.c' object='b_em-ssd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-ssd.obj `if test -f 'ssd.c'; then $(CYGPATH_W) 'ssd.c'; else $(CYGPATH_W) '$(srcdir)/ssd.c'; fi`

b_em-sysvia.o: sysvia.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-sysvia.o -MD -MP -MF $(DEPDIR)/b_em-sysvia.Tpo -c -o b_em-sysvia.o `test -f 'sysvia.c' || echo '$(srcdir)/'`sysvia.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-sysvia.Tpo $(DEPDIR)/b_em-sysvia.Po
#	$(AM_V_CC)source='sysvia.c' object='b_em-sysvia.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-sysvia.o `test -f 'sysvia.c' || echo '$(srcdir)/'`sysvia.c

b_em-sysvia.obj: sysvia.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-sysvia.obj -MD -MP -MF $(DEPDIR)/b_em-sysvia.Tpo -c -o b_em-sysvia.obj `if test -f 'sysvia.c'; then $(CYGPATH_W) 'sysvia.c'; else $(CYGPATH_W) '$(srcdir)/sysvia.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-sysvia.Tpo $(DEPDIR)/b_em-sysvia.Po
#	$(AM_V_CC)source='sysvia.c' object='b_em-sysvia.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-sysvia.obj `if test -f 'sysvia.c'; then $(CYGPATH_W) 'sysvia.c'; else $(CYGPATH_W) '$(srcdir)/sysvia.c'; fi`

b_em-tape.o: tape.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-tape.o -MD -MP -MF $(DEPDIR)/b_em-tape.Tpo -c -o b_em-tape.o `test -f 'tape.c' || echo '$(srcdir)/'`tape.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-tape.Tpo $(DEPDIR)/b_em-tape.Po
#	$(AM_V_CC)source='tape.c' object='b_em-tape.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-tape.o `test -f 'tape.c' || echo '$(srcdir)/'`tape.c

b_em-tape.obj: tape.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-tape.obj -MD -MP -MF $(DEPDIR)/b_em-tape.Tpo -c -o b_em-tape.obj `if test -f 'tape.c'; then $(CYGPATH_W) 'tape.c'; else $(CYGPATH_W) '$(srcdir)/tape.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-tape.Tpo $(DEPDIR)/b_em-tape.Po
#	$(AM_V_CC)source='tape.c' object='b_em-tape.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-tape.obj `if test -f 'tape.c'; then $(CYGPATH_W) 'tape.c'; else $(CYGPATH_W) '$(srcdir)/tape.c'; fi`

b_em-tapenoise.o: tapenoise.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-tapenoise.o -MD -MP -MF $(DEPDIR)/b_em-tapenoise.Tpo -c -o b_em-tapenoise.o `test -f 'tapenoise.c' || echo '$(srcdir)/'`tapenoise.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-tapenoise.Tpo $(DEPDIR)/b_em-tapenoise.Po
#	$(AM_V_CC)source='tapenoise.c' object='b_em-tapenoise.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-tapenoise.o `test -f 'tapenoise.c' || echo '$(srcdir)/'`tapenoise.c

b_em-tapenoise.obj: tapenoise.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-tapenoise.obj -MD -MP -MF $(DEPDIR)/b_em-tapenoise.Tpo -c -o b_em-tapenoise.obj `if test -f 'tapenoise.c'; then $(CYGPATH_W) 'tapenoise.c'; else $(CYGPATH_W) '$(srcdir)/tapenoise.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-tapenoise.Tpo $(DEPDIR)/b_em-tapenoise.Po
#	$(AM_V_CC)source='tapenoise.c' object='b_em-tapenoise.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-tapenoise.obj `if test -f 'tapenoise.c'; then $(CYGPATH_W) 'tapenoise.c'; else $(CYGPATH_W) '$(srcdir)/tapenoise.c'; fi`

b_em-tube.o: tube.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-tube.o -MD -MP -MF $(DEPDIR)/b_em-tube.Tpo -c -o b_em-tube.o `test -f 'tube.c' || echo '$(srcdir)/'`tube.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-tube.Tpo $(DEPDIR)/b_em-tube.Po
#	$(AM_V_CC)source='tube.c' object='b_em-tube.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-tube.o `test -f 'tube.c' || echo '$(srcdir)/'`tube.c

b_em-tube.obj: tube.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-tube.obj -MD -MP -MF $(DEPDIR)/b_em-tube.Tpo -c -o b_em-tube.obj `if test -f 'tube.c'; then $(CYGPATH_W) 'tube.c'; else $(CYGPATH_W) '$(srcdir)/tube.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-tube.Tpo $(DEPDIR)/b_em-tube.Po
#	$(AM_V_CC)source='tube.c' object='b_em-tube.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-tube.obj `if test -f 'tube.c'; then $(CYGPATH_W) 'tube.c'; else $(CYGPATH_W) '$(srcdir)/tube.c'; fi`

b_em-uef.o: uef.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-uef.o -MD -MP -MF $(DEPDIR)/b_em-uef.Tpo -c -o b_em-uef.o `test -f 'uef.c' || echo '$(srcdir)/'`uef.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-uef.Tpo $(DEPDIR)/b_em-uef.Po
#	$(AM_V_CC)source='uef.c' object='b_em-uef.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-uef.o `test -f 'uef.c' || echo '$(srcdir)/'`uef.c

b_em-uef.obj: uef.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-uef.obj -MD -MP -MF $(DEPDIR)/b_em-uef.Tpo -c -o b_em-uef.obj `if test -f 'uef.c'; then $(CYGPATH_W) 'uef.c'; else $(CYGPATH_W) '$(srcdir)/uef.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-uef.Tpo $(DEPDIR)/b_em-uef.Po
#	$(AM_V_CC)source='uef.c' object='b_em-uef.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-uef.obj `if test -f 'uef.c'; then $(CYGPATH_W) 'uef.c'; else $(CYGPATH_W) '$(srcdir)/uef.c'; fi`

b_em-uservia.o: uservia.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-uservia.o -MD -MP -MF $(DEPDIR)/b_em-uservia.Tpo -c -o b_em-uservia.o `test -f 'uservia.c' || echo '$(srcdir)/'`uservia.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-uservia.Tpo $(DEPDIR)/b_em-uservia.Po
#	$(AM_V_CC)source='uservia.c' object='b_em-uservia.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-uservia.o `test -f 'uservia.c' || echo '$(srcdir)/'`uservia.c

b_em-uservia.obj: uservia.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-uservia.obj -MD -MP -MF $(DEPDIR)/b_em-uservia.Tpo -c -o b_em-uservia.obj `if test -f 'uservia.c'; then $(CYGPATH_W) 'uservia.c'; else $(CYGPATH_W) '$(srcdir)/uservia.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-uservia.Tpo $(DEPDIR)/b_em-uservia.Po
#	$(AM_V_CC)source='uservia.c' object='b_em-uservia.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-uservia.obj `if test -f 'uservia.c'; then $(CYGPATH_W) 'uservia.c'; else $(CYGPATH_W) '$(srcdir)/uservia.c'; fi`

b_em-via.o: via.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-via.o -MD -MP -MF $(DEPDIR)/b_em-via.Tpo -c -o b_em-via.o `test -f 'via.c' || echo '$(srcdir)/'`via.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-via.Tpo $(DEPDIR)/b_em-via.Po
#	$(AM_V_CC)source='via.c' object='b_em-via.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-via.o `test -f 'via.c' || echo '$(srcdir)/'`via.c

b_em-via.obj: via.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-via.obj -MD -MP -MF $(DEPDIR)/b_em-via.Tpo -c -o b_em-via.obj `if test -f 'via.c'; then $(CYGPATH_W) 'via.c'; else $(CYGPATH_W) '$(srcdir)/via.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-via.Tpo $(DEPDIR)/b_em-via.Po
#	$(AM_V_CC)source='via.c' object='b_em-via.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-via.obj `if test -f 'via.c'; then $(CYGPATH_W) 'via.c'; else $(CYGPATH_W) '$(srcdir)/via.c'; fi`

b_em-vidalleg.o: vidalleg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-vidalleg.o -MD -MP -MF $(DEPDIR)/b_em-vidalleg.Tpo -c -o b_em-vidalleg.o `test -f 'vidalleg.c' || echo '$(srcdir)/'`vidalleg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-vidalleg.Tpo $(DEPDIR)/b_em-vidalleg.Po
#	$(AM_V_CC)source='vidalleg.c' object='b_em-vidalleg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-vidalleg.o `test -f 'vidalleg.c' || echo '$(srcdir)/'`vidalleg.c

b_em-vidalleg.obj: vidalleg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-vidalleg.obj -MD -MP -MF $(DEPDIR)/b_em-vidalleg.Tpo -c -o b_em-vidalleg.obj `if test -f 'vidalleg.c'; then $(CYGPATH_W) 'vidalleg.c'; else $(CYGPATH_W) '$(srcdir)/vidalleg.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-vidalleg.Tpo $(DEPDIR)/b_em-vidalleg.Po
#	$(AM_V_CC)source='vidalleg.c' object='b_em-vidalleg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-vidalleg.obj `if test -f 'vidalleg.c'; then $(CYGPATH_W) 'vidalleg.c'; else $(CYGPATH_W) '$(srcdir)/vidalleg.c'; fi`

b_em-video.o: video.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-video.o -MD -MP -MF $(DEPDIR)/b_em-video.Tpo -c -o b_em-video.o `test -f 'video.c' || echo '$(srcdir)/'`video.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-video.Tpo $(DEPDIR)/b_em-video.Po
#	$(AM_V_CC)source='video.c' object='b_em-video.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-video.o `test -f 'video.c' || echo '$(srcdir)/'`video.c

b_em-video.obj: video.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-video.obj -MD -MP -MF $(DEPDIR)/b_em-video.Tpo -c -o b_em-video.obj `if test -f 'video.c'; then $(CYGPATH_W) 'video.c'; else $(CYGPATH_W) '$(srcdir)/video.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-video.Tpo $(DEPDIR)/b_em-video.Po
#	$(AM_V_CC)source='video.c' object='b_em-video.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-video.obj `if test -f 'video.c'; then $(CYGPATH_W) 'video.c'; else $(CYGPATH_W) '$(srcdir)/video.c'; fi`

b_em-wd1770.o: wd1770.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-wd1770.o -MD -MP -MF $(DEPDIR)/b_em-wd1770.Tpo -c -o b_em-wd1770.o `test -f 'wd1770.c' || echo '$(srcdir)/'`wd1770.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-wd1770.Tpo $(DEPDIR)/b_em-wd1770.Po
#	$(AM_V_CC)source='wd1770.c' object='b_em-wd1770.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-wd1770.o `test -f 'wd1770.c' || echo '$(srcdir)/'`wd1770.c

b_em-wd1770.obj: wd1770.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-wd1770.obj -MD -MP -MF $(DEPDIR)/b_em-wd1770.Tpo -c -o b_em-wd1770.obj `if test -f 'wd1770.c'; then $(CYGPATH_W) 'wd1770.c'; else $(CYGPATH_W) '$(srcdir)/wd1770.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-wd1770.Tpo $(DEPDIR)/b_em-wd1770.Po
#	$(AM_V_CC)source='wd1770.c' object='b_em-wd1770.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-wd1770.obj `if test -f 'wd1770.c'; then $(CYGPATH_W) 'wd1770.c'; else $(CYGPATH_W) '$(srcdir)/wd1770.c'; fi`

b_em-x86.o: x86.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-x86.o -MD -MP -MF $(DEPDIR)/b_em-x86.Tpo -c -o b_em-x86.o `test -f 'x86.c' || echo '$(srcdir)/'`x86.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-x86.Tpo $(DEPDIR)/b_em-x86.Po
#	$(AM_V_CC)source='x86.c' object='b_em-x86.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-x86.o `test -f 'x86.c' || echo '$(srcdir)/'`x86.c

b_em-x86.obj: x86.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-x86.obj -MD -MP -MF $(DEPDIR)/b_em-x86.Tpo -c -o b_em-x86.obj `if test -f 'x86.c'; then $(CYGPATH_W) 'x86.c'; else $(CYGPATH_W) '$(srcdir)/x86.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-x86.Tpo $(DEPDIR)/b_em-x86.Po
#	$(AM_V_CC)source='x86.c' object='b_em-x86.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-x86.obj `if test -f 'x86.c'; then $(CYGPATH_W) 'x86.c'; else $(CYGPATH_W) '$(srcdir)/x86.c'; fi`

b_em-Z80.o: Z80.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-Z80.o -MD -MP -MF $(DEPDIR)/b_em-Z80.Tpo -c -o b_em-Z80.o `test -f 'Z80.c' || echo '$(srcdir)/'`Z80.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-Z80.Tpo $(DEPDIR)/b_em-Z80.Po
#	$(AM_V_CC)source='Z80.c' object='b_em-Z80.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-Z80.o `test -f 'Z80.c' || echo '$(srcdir)/'`Z80.c

b_em-Z80.obj: Z80.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -MT b_em-Z80.obj -MD -MP -MF $(DEPDIR)/b_em-Z80.Tpo -c -o b_em-Z80.obj `if test -f 'Z80.c'; then $(CYGPATH_W) 'Z80.c'; else $(CYGPATH_W) '$(srcdir)/Z80.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/b_em-Z80.Tpo $(DEPDIR)/b_em-Z80.Po
#	$(AM_V_CC)source='Z80.c' object='b_em-Z80.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(b_em_CFLAGS) $(CFLAGS) -c -o b_em-Z80.obj `if test -f 'Z80.c'; then $(CYGPATH_W) 'Z80.c'; else $(CYGPATH_W) '$(srcdir)/Z80.c'; fi`

.cc.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f resid-fp/$(DEPDIR)/$(am__dirstamp)
	-rm -f resid-fp/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) resid-fp/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) resid-fp/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS


../b-em: b-em
	cp b-em ..

amrefresh:	

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
